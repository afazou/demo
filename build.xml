<?xml version="1.0" encoding="UTF-8"?>
<project name="pexample" default="full-build">

    <!--使用Jenkins的内置变量-->
    <property environment="env"/>
    
    <!--输出到控制台-->
    <echo>Main Target init...............................................................</echo>
    <echo>basedir:${basedir}</echo>
    <echo>WORKSPACE:${env.WORKSPACE}</echo>
    <echo>JOB_NAME:${env.JOB_NAME}</echo>
    <echo>JOB_BASE_NAME:${env.JOB_BASE_NAME}</echo>
    <echo>BUILD_NUMBER:${env.BUILD_NUMBER}</echo>
    <echo>BUILD_ID:${env.BUILD_ID}</echo>
    <echo>BUILD_DISPLAY_NAME:${env.BUILD_DISPLAY_NAME}</echo>
    <echo>NODE_NAME:${env.NODE_NAME}</echo>
    <echo>NODE_LABELS:${env.NODE_LABELS}</echo>

    <!--自定义属性-->
    <property name="tarfile" value="${env.JOB_NAME}.${env.BUILD_NUMBER}.${env.BUILD_ID}.tar.gz" />
    <property name="distfile" value="dist/${tarfile}" />


    <target name="full-build" depends="prepare,phpmd,phpcpd,phpcs,phpunit,-check-failure,release"/>

    <target name="clean" unless="clean.done" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete file="${basedir}/build/pmd.xml"/>
        <delete file="${basedir}/build/cpd.xml"/>
        <delete file="${basedir}/build/checkstyle-result.xml"/>
        <property name="clean.done" value="true"/>
    </target>



    <target name="prepare" unless="prepare.done" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <property name="prepare.done" value="true"/>
    </target>


    <target name="phpmd">
        <exec dir="${basedir}" executable="/usr/local/bin/phpmd">
            <arg path="${basedir}" />
            <arg value="xml" />
            <arg path="kefu-client/phpmd.xml" />
            <arg value="--reportfile" />
            <arg path="${basedir}/build/pmd.xml" />
            <arg value="--suffixes" />
            <arg value="php" />
        </exec>
    </target>


    <!--failonerror：当出现错误时自动停止-->
    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec dir="${basedir}" executable="/usr/local/bin/phpunit" resultproperty="result.phpunit" failonerror="true">
            <arg value="--configuration"/>
            <arg path="kefu-client/phpunit-db.xml"/>
        </exec>
    </target>


    <target name="phpcpd">
        <exec dir="${basedir}" executable="/usr/local/bin/phpcpd">
            <arg value="--log-pmd" />
            <arg path="${basedir}/build/cpd.xml" />
            <arg path="kefu-client/src" />
        </exec>
    </target>


    <target name="phpcs">
        <exec dir="${basedir}" executable="/usr/local/bin/phpcs">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/checkstyle-result.xml" />
            <arg value="--standard=PSR2" />
            <arg value="--extensions=php" />
            <arg value="--ignore=autoload.php" />
            <arg path="kefu-client/src" />
            <arg path="kefu-client/tests" />
        </exec>
    </target>


    <target name="-check-failure">
        <fail message="PHPUnit did not finish successfully">
            <condition>
                <not>
                    <equals arg1="${result.phpunit}" arg2="0"/>
                </not>
            </condition>
        </fail>
    </target>


    <fileset id="package.tar.gz" dir=".">
        <exclude name="build/**"/>
        <exclude name="dist/**"/>
        <exclude name="build.xml"/>
        <exclude name="README.md"/>
    </fileset>

    <target name="tar" depends="check" description="Create tar file for release">
        <echo>Creating distribution tar for ${tarfile}</echo>
        <delete file="${distfile}" failonerror="false"/>
        <tar destfile="${distfile}" compression="gzip">
            <fileset refid="package.tar.gz"/>
        </tar>
        <available property="isExist" file="${distfile}" type="file" />
    </target>

    <target name="check" description="Check variables" >
        <delete dir="dist" failonerror="false" />
        <mkdir dir="dist" />
    </target>

    <!--布署-->
    <target if="isExist" name="release" description="Release package" depends="tar" >
        <copy overwrite="true" todir="/opt/release" file="${distfile}" />
    </target>

</project>


